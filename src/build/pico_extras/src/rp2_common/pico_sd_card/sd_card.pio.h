// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------ //
// sd_clk //
// ------ //

#define sd_clk_wrap_target 0
#define sd_clk_wrap 1

static const uint16_t sd_clk_program_instructions[] = {
            //     .wrap_target
    0xd007, //  0: irq    nowait 7        side 1     
    0xc047, //  1: irq    clear 7         side 0     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program sd_clk_program = {
    .instructions = sd_clk_program_instructions,
    .length = 2,
    .origin = -1,
};

static inline pio_sm_config sd_clk_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + sd_clk_wrap_target, offset + sd_clk_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}
#endif

// ------------- //
// sd_cmd_or_dat //
// ------------- //

#define sd_cmd_or_dat_wrap_target 8
#define sd_cmd_or_dat_wrap 15

#define sd_cmd_or_dat_offset_no_arg_state_wait_high 0u
#define sd_cmd_or_dat_offset_no_arg_state_waiting_for_cmd 2u
#define sd_cmd_or_dat_offset_state_send_bits 3u
#define sd_cmd_or_dat_offset_state_inline_instruction 7u
#define sd_cmd_or_dat_offset_state_receive_bits 9u
#define sd_cmd_or_dat_offset_wrap_for_4bit_receive 14u
#define sd_cmd_or_dat_offset_wrap_target_for_4bit_receive 16u

static const uint16_t sd_cmd_or_dat_program_instructions[] = {
    0xe00f, //  0: set    pins, 15                   
    0xe08f, //  1: set    pindirs, 15                
    0x60f0, //  2: out    exec, 16                   
    0x6030, //  3: out    x, 16                      
    0x2047, //  4: wait   0 irq, 7                   
    0x6001, //  5: out    pins, 1                    
    0x0045, //  6: jmp    x--, 5                     
    0x60f0, //  7: out    exec, 16                   
            //     .wrap_target
    0x60f0, //  8: out    exec, 16                   
    0x6030, //  9: out    x, 16                      
    0xe080, // 10: set    pindirs, 0                 
    0x20a0, // 11: wait   1 pin, 0                   
    0x2020, // 12: wait   0 pin, 0                   
    0x2047, // 13: wait   0 irq, 7                   
    0x4001, // 14: in     pins, 1                    
    0x004e, // 15: jmp    x--, 14                    
            //     .wrap
    0x4004, // 16: in     pins, 4                    
    0x0050, // 17: jmp    x--, 16                    
    0x60f0, // 18: out    exec, 16                   
};

#if !PICO_NO_HARDWARE
static const struct pio_program sd_cmd_or_dat_program = {
    .instructions = sd_cmd_or_dat_program_instructions,
    .length = 19,
    .origin = 0,
};

static inline pio_sm_config sd_cmd_or_dat_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + sd_cmd_or_dat_wrap_target, offset + sd_cmd_or_dat_wrap);
    return c;
}
#endif

